{"doc":{"isMarkdown":false,"isTranslated":false,"isActive":true,"flaws":{},"title":"Body.json()","mdn_url":"/en-US/docs/Web/API/Body/json","locale":"en-US","native":"English (US)","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/Body\"><code>Body</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Body/body\"><code>body</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Body/bodyUsed\"><code>bodyUsed</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Body/arrayBuffer\"><code>arrayBuffer()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Body/blob\"><code>blob()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Body/formData\"><code>formData()</code></a></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><em><code>json()</code></em></li><li><svg class=\"icon icon-experimental\" tabindex=\"0\">\n    <use xlink:href=\"/assets/badges.svg#icon-experimental\"></use>\n</svg><a href=\"/en-US/docs/Web/API/Body/text\"><code>text()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Implemented by:</summary><ol><li><a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a></li><li><a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Fetch API</summary><ol><li><a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a></li><li><a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a></li><li><a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\"><code>WindowOrWorkerGlobalScope.fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<div></div>\n\n<p>The <strong><code>json()</code></strong> method of the <a href=\"/en-US/docs/Web/API/Body\"><code>Body</code></a> mixin takes\n  a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> stream and reads it to completion. It returns a promise which\n  resolves with a JavaScript object that is the result of parsing the body text as <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON\"><code>JSON</code></a>.</p>\n\n<p>Note that despite the method being named <code>json()</code>, the result is not JSON but is instead the result of taking JSON as input and parsing it to produce a JavaScript object.</p>"}},{"type":"prose","value":{"id":"Syntax","title":"Syntax","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: js notranslate\"><code>response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something with your data</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"prose","value":{"id":"Parameters","title":"Parameters","isH3":true,"content":"<p>None.</p>"}},{"type":"prose","value":{"id":"Return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\"><code>Promise</code></a> that resolves to a JavaScript object. This object could be\n  anything that can be represented by JSON&nbsp;— an object, an array, a string, a number...\n</p>"}},{"type":"prose","value":{"id":"Example","title":"Example","isH3":false,"content":"<p>In our <a href=\"https://github.com/mdn/fetch-examples/tree/master/fetch-json\" class=\"external\" rel=\" noopener\">fetch\n    json example</a> (run <a href=\"https://mdn.github.io/fetch-examples/fetch-json/\" class=\"external\" rel=\" noopener\">fetch\n    json live</a>), we create a new request using the <a href=\"/en-US/docs/Web/API/Request/Request\" title=\"Request()\"><code>Request()</code></a> constructor, then use it to fetch a <code>.json</code> file. When the\n  fetch is successful, we read and parse the data using <code>json()</code>, then read\n  values out of the resulting objects as you'd expect and insert them into list items to\n  display our product data.</p>\n\n<div class=\"code-example\"><pre class=\"brush: js highlight[5] notranslate\"><code><span class=\"token keyword\">const</span> myList <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'products.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=&gt;</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> product <span class=\"token keyword\">of</span> data<span class=\"token punctuation\">.</span>products<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> listItem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'li'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      listItem<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'strong'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> product<span class=\"token punctuation\">.</span>Name<span class=\"token punctuation\">;</span>\n      listItem<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>\n        <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> can be found in </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>\n          product<span class=\"token punctuation\">.</span>Location\n        <span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">. Cost: </span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      listItem<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>\n        document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'strong'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">£</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>product<span class=\"token punctuation\">.</span>Price<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      myList<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>listItem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"type":"specifications","value":{"title":"Specifications","id":"Specifications","isH3":false,"specifications":[{"bcdSpecificationURL":"https://fetch.spec.whatwg.org/#ref-for-dom-body-json①","title":"Fetch Standard","shortTitle":"Fetch"}],"query":"api.Body.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":""}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"Browser_compatibility","isH3":false,"query":"api.Body.json","dataURL":"/en-US/docs/Web/API/Body/json/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"See_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Service_Worker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP/CORS\">Cross-Origin Resource Sharing (CORS)</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"Syntax"},{"text":"Example","id":"Example"},{"text":"Specifications","id":"Specifications"},{"text":"Browser compatibility","id":"Browser_compatibility"},{"text":"See also","id":"See_also"}],"summary":"The json() method of the Body mixin takes\n  a Response stream and reads it to completion. It returns a promise which\n  resolves with a JavaScript object that is the result of parsing the body text as JSON.","popularity":0.0126,"modified":"2021-06-11T14:44:04.000Z","other_translations":[{"title":"Body.json()","locale":"de","native":"Deutsch"},{"title":"Body.json()","locale":"es","native":"Español"},{"title":"Body.json()","locale":"fr","native":"Français"},{"title":"Body.json()","locale":"ja","native":"日本語"},{"title":"Body.json()","locale":"ko","native":"한국어"},{"title":"Body.json()","locale":"pt-BR","native":"Português (do Brasil)"},{"title":"Body.json()","locale":"ru","native":"Русский"},{"title":"Body.json()","locale":"zh-CN","native":"中文 (简体)"},{"title":"Body.json()","locale":"zh-TW","native":"正體中文 (繁體)"}],"source":{"folder":"en-us/web/api/body/json","github_url":"https://github.com/mdn/content/blob/main/files/en-us/web/api/body/json/index.html","last_commit_url":"https://github.com/mdn/content/commit/7384f7c1628461078d02b00e3bb21a911f39680c","filename":"index.html"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/Body","title":"Body"},{"uri":"/en-US/docs/Web/API/Body/json","title":"Body.json()"}],"pageTitle":"Body.json() - Web APIs | MDN","noIndexing":false}}
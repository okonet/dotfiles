{"doc":{"isTranslated":false,"flaws":{},"title":"WindowOrWorkerGlobalScope.fetch()","mdn_url":"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch","locale":"en-US","sidebarHTML":"<ol><li><strong><a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a></strong></li><li><strong><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a></strong></li><li class=\"toggle\"><details open=\"\"><summary>Properties</summary><ol><li><svg class=\"icon experimental\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\">\n    <title>This is an experimental API that should not be used in production code.</title>\n    <path d=\"M90.72 82.34c4.4 7 1.29 12.66-7 12.66H16.25C8 95 4.88 89.31 9.28 82.34l29.47-46.46V12.5H35A3.75 3.75 0 0135 5h30a3.75 3.75 0 010 7.5h-3.75v23.38zM45.08 39.86L29.14 65h41.72L54.92 39.86l-1.17-1.81V12.5h-7.5v25.55z\"></path>\n</svg><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/caches\"><code>caches</code></a></li><li><svg class=\"icon experimental\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\">\n    <title>This is an experimental API that should not be used in production code.</title>\n    <path d=\"M90.72 82.34c4.4 7 1.29 12.66-7 12.66H16.25C8 95 4.88 89.31 9.28 82.34l29.47-46.46V12.5H35A3.75 3.75 0 0135 5h30a3.75 3.75 0 010 7.5h-3.75v23.38zM45.08 39.86L29.14 65h41.72L54.92 39.86l-1.17-1.81V12.5h-7.5v25.55z\"></path>\n</svg><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/crossOriginIsolated\"><code>crossOriginIsolated</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/indexedDB\"><code>indexedDB</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/isSecureContext\"><code>isSecureContext</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/origin\"><code>origin</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Methods</summary><ol><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/atob\"><code>atob()</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/btoa\"><code>btoa()</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearInterval\"><code>clearInterval()</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearTimeout\"><code>clearTimeout()</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/createImageBitmap\"><code>createImageBitmap()</code></a></li><li><svg class=\"icon experimental\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" role=\"img\">\n    <title>This is an experimental API that should not be used in production code.</title>\n    <path d=\"M90.72 82.34c4.4 7 1.29 12.66-7 12.66H16.25C8 95 4.88 89.31 9.28 82.34l29.47-46.46V12.5H35A3.75 3.75 0 0135 5h30a3.75 3.75 0 010 7.5h-3.75v23.38zM45.08 39.86L29.14 65h41.72L54.92 39.86l-1.17-1.81V12.5h-7.5v25.55z\"></path>\n</svg><em><code>fetch()</code></em></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/queueMicrotask\"><code>queueMicrotask()</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval\"><code>setInterval()</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout\"><code>setTimeout()</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Implemented by:</summary><ol><li><a href=\"/en-US/docs/Web/API/Window\"><code>Window</code></a></li><li><a href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a></li></ol></details></li><li class=\"toggle\"><details open=\"\"><summary>Related pages for Fetch API</summary><ol><li><a href=\"/en-US/docs/Web/API/Body\"><code>Body</code></a></li><li><a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a></li><li><a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a></li><li><a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a></li><li><a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\"><code>WindowOrWorkerGlobalScope.fetch()</code></a></li></ol></details></li></ol>","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>\n\n<p><span class=\"seoSummary\">The <code><strong>fetch()</strong></code> method of the\n    <a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope\"><code>WindowOrWorkerGlobalScope</code></a> mixin starts the process of fetching a\n    resource from the network, returning a promise which is fulfilled once the response is\n    available.</span> The promise resolves to the <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> object\n  representing the response to your request. The promise <em>does not</em> reject on HTTP\n  errors — it only rejects on network errors. You must use <code>then</code> handlers to\n  check for HTTP errors.</p>\n\n<p><code>WindowOrWorkerGlobalScope</code> is implemented by both <a href=\"/en-US/docs/Web/API/Window\"><code>Window</code></a> and\n  <a href=\"/en-US/docs/Web/API/WorkerGlobalScope\"><code>WorkerGlobalScope</code></a>, which means that the <code>fetch()</code> method is\n  available in pretty much any context in which you might want to fetch resources.</p>\n\n<p>A <a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\"><code>fetch()</code></a> promise only rejects when a\n  network error is encountered (which is usually when there’s a permissions issue or\n  similar). A <a href=\"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\"><code>fetch()</code></a> promise <em>does\n    not</em> reject on HTTP errors (<code>404</code>, etc.). Instead, a\n  <code>then()</code> handler must check the <a href=\"/en-US/docs/Web/API/Response/ok\"><code>Response.ok</code></a> and/or\n  <a href=\"/en-US/docs/Web/API/Response/status\"><code>Response.status</code></a> properties.</p>\n\n<p>The <code>fetch()</code> method is controlled by the <code>connect-src</code> directive\n  of <a href=\"/en-US/docs/Security/CSP/CSP_policy_directives\">Content Security Policy</a>\n  rather than the directive of the resources it's retrieving.</p>\n\n<div class=\"note notecard\">\n  <p><strong>Note</strong>: The <code>fetch()</code> method's parameters are identical to\n    those of the <a href=\"/en-US/docs/Web/API/Request/Request\"><code>Request()</code></a> constructor.</p>\n</div>"}},{"type":"prose","value":{"id":"Syntax","title":"Syntax","isH3":false,"content":"<pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> fetchResponsePromise <span class=\"token operator\">=</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>resource <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> init<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>"}},{"type":"prose","value":{"id":"Parameters","title":"Parameters","isH3":true,"content":"<dl>\n  <dt><code><var>resource</var></code></dt>\n  <dd>This defines the resource that you wish to fetch. This can either be:\n    <ul>\n      <li>A <a href=\"/en-US/docs/Web/API/USVString\"><code>USVString</code></a> containing the direct URL of the resource you want to\n        fetch. Some browsers accept the <code>blob:</code> and <code>data:</code> schemes.\n      </li>\n      <li>A <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> object.</li>\n    </ul>\n  </dd>\n  <dt><code><var>init</var></code> <span class=\"badge inline optional\">Optional</span></dt>\n  <dd>\n    <p>An object containing any custom settings that you want to apply to the request. The\n      possible options are:</p>\n\n    <dl>\n      <dt><code>method</code></dt>\n      <dd>The request method, e.g., <code>GET</code>, <code>POST</code>. Note that the\n        <a href=\"/en-US/docs/Web/HTTP/Headers/Origin\"><code>Origin</code></a> header is not set on Fetch requests with a method of\n        <a href=\"/en-US/docs/Web/HTTP/Methods/HEAD\"><code>HEAD</code></a> or <a href=\"/en-US/docs/Web/HTTP/Methods/GET\"><code>GET</code></a>.<br>\n        (This behavior was corrected in Firefox 65 — see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1508661\">bug&nbsp;1508661</a>).</dd>\n      <dt><code>headers</code></dt>\n      <dd>Any headers you want to add to your request, contained within a\n        <a href=\"/en-US/docs/Web/API/Headers\"><code>Headers</code></a> object or an object literal with <a href=\"/en-US/docs/Web/API/ByteString\"><code>ByteString</code></a>\n        values. Note that <a href=\"/en-US/docs/Glossary/Forbidden_header_name\">some names\n          are forbidden</a>.</dd>\n      <dt><code>body</code></dt>\n      <dd>Any body that you want to add to your request: this can be a\n        <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a>, <a href=\"/en-US/docs/Web/API/BufferSource\"><code>BufferSource</code></a>, <a href=\"/en-US/docs/Web/API/FormData\"><code>FormData</code></a>,\n        <a href=\"/en-US/docs/Web/API/URLSearchParams\"><code>URLSearchParams</code></a>, <a href=\"/en-US/docs/Web/API/USVString\"><code>USVString</code></a>, or\n        <a href=\"/en-US/docs/Web/API/ReadableStream\"><code>ReadableStream</code></a> object. Note that a request using the\n        <code>GET</code> or <code>HEAD</code> method cannot have a body.</dd>\n      <dt><code>mode</code></dt>\n      <dd>The mode you want to use for the request, e.g., <code>cors</code>,\n        <code>no-cors</code>, or <code>same-origin</code>.</dd>\n      <dt><code>credentials</code></dt>\n      <dd>The request credentials you want to use for the request: <code>omit</code>,\n        <code>same-origin</code>, or <code>include</code>. To automatically send cookies\n        for the current domain, this option must be provided. Starting with Chrome 50,\n        this property also takes a <a href=\"/en-US/docs/Web/API/FederatedCredential\"><code>FederatedCredential</code></a> instance or a\n        <a href=\"/en-US/docs/Web/API/PasswordCredential\"><code>PasswordCredential</code></a> instance.</dd>\n      <dt><code>cache</code></dt>\n      <dd>The <a href=\"/en-US/docs/Web/API/Request/cache\">cache mode</a> you want to use\n        for the request.</dd>\n      <dt><code>redirect</code></dt>\n      <dd>The redirect mode to use: <code>follow</code> (automatically follow redirects),\n        <code>error</code> (abort with an error if a redirect occurs), or\n        <code>manual</code> (handle redirects manually). In Chrome the default is\n        <code>follow</code> (before Chrome 47 it defaulted to <code>manual</code>).</dd>\n      <dt><code>referrer</code></dt>\n      <dd>A <a href=\"/en-US/docs/Web/API/USVString\"><code>USVString</code></a> specifying the referrer of the request. This can be a\n        same-origin URL, <code>about:client</code>, or an empty string.</dd>\n      <dt><code>referrerPolicy</code></dt>\n      <dd>Specifies the <a href=\"https://w3c.github.io/webappsec-referrer-policy/#referrer-policies\">referrer\n          policy</a> to use for the request. May be one of <code>no-referrer</code>,\n        <code>no-referrer-when-downgrade</code>, <code>same-origin</code>,\n        <code>origin</code>, <code>strict-origin</code>,\n        <code>origin-when-cross-origin</code>,\n        <code>strict-origin-when-cross-origin</code>, or <code>unsafe-url</code>.</dd>\n      <dt><code>integrity</code></dt>\n      <dd>Contains the <a href=\"/en-US/docs/Web/Security/Subresource_Integrity\">subresource integrity</a>\n        value of the request (e.g.,\n        <code>sha256-BpfBw7ivV8q2jLiT13fxDYAe2tJllusRSZ273h2nFSE=</code>).</dd>\n      <dt><code>keepalive</code></dt>\n      <dd>The <code>keepalive</code> option can be used to allow the request to outlive\n        the page. Fetch with the <code>keepalive</code> flag is a replacement for the\n        <a href=\"/en-US/docs/Web/API/Navigator/sendBeacon\"><code>Navigator.sendBeacon()</code></a> API.</dd>\n      <dt><code>signal</code></dt>\n      <dd>An <a href=\"/en-US/docs/Web/API/AbortSignal\"><code>AbortSignal</code></a> object instance; allows you to communicate with a\n        fetch request and abort it if desired via an <a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a>.</dd>\n    </dl>\n  </dd>\n</dl>"}},{"type":"prose","value":{"id":"Return_value","title":"Return value","isH3":true,"content":"<p>A <a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" data-flaw-src=\"{{domxref(&quot;Promise&quot;)}}\"><code>Promise</code></a> that resolves to a <a href=\"/en-US/docs/Web/API/Response\"><code>Response</code></a> object.</p>"}},{"type":"prose","value":{"id":"Exceptions","title":"Exceptions","isH3":true,"content":"<dl>\n  <dt><code>AbortError</code></dt>\n  <dd>The request was aborted due to a call to the <a href=\"/en-US/docs/Web/API/AbortController\"><code>AbortController</code></a> method\n    <a href=\"/en-US/docs/Web/API/AbortController/abort\"><code>abort()</code></a> method.</dd>\n  <dt><code>TypeError</code></dt>\n  <dd>The specified URL string includes user credentials. This information should instead\n    be provided using an <a href=\"/en-US/docs/Web/HTTP/Headers/Authorization\"><code>Authorization</code></a> header.</dd>\n</dl>"}},{"type":"prose","value":{"id":"Examples","title":"Examples","isH3":false,"content":"<p>In our <a href=\"https://github.com/mdn/fetch-examples/tree/master/fetch-request\">Fetch\n    Request example</a> (see <a href=\"https://mdn.github.io/fetch-examples/fetch-request/\">Fetch Request live</a>) we\n  create a new <a href=\"/en-US/docs/Web/API/Request\"><code>Request</code></a> object using the relevant constructor, then fetch it\n  using a <code>fetch()</code> call. Since we are fetching an image, we run\n  <a href=\"/en-US/docs/Web/API/Body/blob\"><code>Body.blob()</code></a> on the response to give it the proper MIME type so it will be\n  handled properly, then create an Object URL of it and display it in an\n  <a href=\"/en-US/docs/Web/HTML/Element/img\"><code>&lt;img&gt;</code></a> element.</p>\n\n<pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">HTTP error! status: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>response<span class=\"token punctuation\">.</span>status<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> objectURL <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  myImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> objectURL<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>In the <a href=\"https://github.com/mdn/fetch-examples/blob/master/fetch-with-init-then-request/index.html\">Fetch\n    with init then Request example</a> (see <a href=\"https://mdn.github.io/fetch-examples/fetch-with-init-then-request/\">Fetch\n    Request init live</a>), we do the same thing except that we pass in an\n  <code><var>init</var></code> object when we invoke <code>fetch()</code>:</p>\n\n<pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myImage <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> myHeaders <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyHeaders<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> myInit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n  headers<span class=\"token operator\">:</span> myHeaders<span class=\"token punctuation\">,</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">,</span>\n  cache<span class=\"token operator\">:</span> <span class=\"token string\">'default'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>myRequest<span class=\"token punctuation\">,</span> myInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>You could also pass the <code><var>init</var></code> object in with the\n  <code>Request</code> constructor to get the same effect:</p>\n\n<pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">let</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">,</span> myInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n\n<p>You can also use an object literal as <code>headers</code> in\n  <code><var>init</var></code>.</p>\n\n<pre class=\"brush: js notranslate\"><code><span class=\"token keyword\">const</span> myInit <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n  headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'image/jpeg'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'cors'</span><span class=\"token punctuation\">,</span>\n  cache<span class=\"token operator\">:</span> <span class=\"token string\">'default'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> myRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flowers.jpg'</span><span class=\"token punctuation\">,</span> myInit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>"}},{"type":"prose","value":{"id":"Specifications","title":"Specifications","isH3":false,"content":"<table class=\"standard-table\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Specification</th>\n      <th scope=\"col\">Status</th>\n      <th scope=\"col\">Comment</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><a href=\"https://fetch.spec.whatwg.org/#fetch-method\" hreflang=\"en\" lang=\"en\" class=\"external\">Fetch<br><small lang=\"en-US\">The definition of 'fetch()' in that specification.</small></a></td>\n      <td><span class=\"spec-living\">Living Standard</span></td>\n      <td>Defined in a <code>WindowOrWorkerGlobalScope</code> partial in the newest spec.\n      </td>\n    </tr>\n    <tr>\n      <td><a href=\"https://fetch.spec.whatwg.org/#dom-global-fetch\" hreflang=\"en\" lang=\"en\" class=\"external\">Fetch<br><small lang=\"en-US\">The definition of 'fetch()' in that specification.</small></a></td>\n      <td><span class=\"spec-living\">Living Standard</span></td>\n      <td>Initial definition</td>\n    </tr>\n    <tr>\n      <td><a href=\"https://w3c.github.io/webappsec-credential-management/\" hreflang=\"en\" lang=\"en\" class=\"external\" title=\"The 'Credential Management Level 1' specification\">Credential Management Level 1</a></td>\n      <td><span class=\"spec-wd\">Working Draft</span></td>\n      <td>Adds <a href=\"/en-US/docs/Web/API/FederatedCredential\"><code>FederatedCredential</code></a> or <a href=\"/en-US/docs/Web/API/PasswordCredential\"><code>PasswordCredential</code></a>\n        instance as a possible value for <code>init.credentials</code>.</td>\n    </tr>\n  </tbody>\n</table>"}},{"type":"browser_compatibility","value":{"title":"Browser compatibility","id":"Browser_compatibility","isH3":false,"query":"api.WindowOrWorkerGlobalScope.fetch","dataURL":"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch/bcd.json"}},{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p></p><p></p>"}},{"type":"prose","value":{"id":"See_also","title":"See also","isH3":false,"content":"<ul>\n  <li><a href=\"/en-US/docs/Web/API/Fetch_API\">Fetch API</a></li>\n  <li><a href=\"/en-US/docs/Web/API/ServiceWorker_API\">ServiceWorker API</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP/CORS\">HTTP access control (CORS)</a></li>\n  <li><a href=\"/en-US/docs/Web/HTTP\">HTTP</a></li>\n</ul>"}}],"toc":[{"text":"Syntax","id":"Syntax"},{"text":"Examples","id":"Examples"},{"text":"Specifications","id":"Specifications"},{"text":"Browser compatibility","id":"Browser_compatibility"},{"text":"See also","id":"See_also"}],"summary":"The fetch() method of the\n    WindowOrWorkerGlobalScope mixin starts the process of fetching a\n    resource from the network, returning a promise which is fulfilled once the response is\n    available.","popularity":0.0749,"modified":"2021-01-09T13:41:23.000Z","other_translations":[{"url":"/es/docs/Web/API/WindowOrWorkerGlobalScope/fetch","locale":"es","title":"WindowOrWorkerGlobalScope.fetch()"},{"url":"/fr/docs/Web/API/WindowOrWorkerGlobalScope/fetch","locale":"fr","title":"GlobalFetch.fetch()"},{"url":"/it/docs/Web/API/WindowOrWorkerGlobalScope/fetch","locale":"it","title":"WindowOrWorkerGlobalScope.fetch()"},{"url":"/ja/docs/Web/API/WindowOrWorkerGlobalScope/fetch","locale":"ja","title":"WindowOrWorkerGlobalScope.fetch()"},{"url":"/pt-BR/docs/Web/API/WindowOrWorkerGlobalScope/fetch","locale":"pt-BR","title":"WindowOrWorkerGlobalScope.fetch()"},{"url":"/ru/docs/Web/API/WindowOrWorkerGlobalScope/fetch","locale":"ru","title":"WindowOrWorkerGlobalScope.fetch()"},{"url":"/zh-CN/docs/Web/API/WindowOrWorkerGlobalScope/fetch","locale":"zh-CN","title":"WorkerOrGlobalScope.fetch()"}],"source":{"folder":"en-us/web/api/windoworworkerglobalscope/fetch","github_url":"https://github.com/mdn/content/blob/master/files/en-us/web/api/windoworworkerglobalscope/fetch/index.html"},"parents":[{"uri":"/en-US/docs/Web","title":"Web technology for developers"},{"uri":"/en-US/docs/Web/API","title":"Web APIs"},{"uri":"/en-US/docs/Web/API/WindowOrWorkerGlobalScope","title":"WindowOrWorkerGlobalScope"},{"uri":"/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch","title":"WindowOrWorkerGlobalScope.fetch()"}],"pageTitle":"WindowOrWorkerGlobalScope.fetch() - Web APIs | MDN"}}
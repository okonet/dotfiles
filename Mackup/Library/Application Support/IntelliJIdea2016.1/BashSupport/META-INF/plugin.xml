<idea-plugin version="2" url="https://github.com/jansorg/BashSupport">
  <resource-bundle>com.ansorgit.plugins.bash.bash</resource-bundle>
  <name>BashSupport</name>
  <category>Custom Languages</category>
  <version>1.5.8.145</version>
  <vendor url="http://www.ansorg-it.com/" email="mail@ansorg-it.com">Joachim Ansorg</vendor>
  <idea-version since-build="145.184.1" until-build="145.9999"/>
  <depends>com.intellij.modules.lang</depends>
  <depends optional="true" config-file="intelliLang-bashsupport.xml">org.intellij.intelliLang</depends>
  <description>&lt;html&gt;
    Bash language support for IntelliJ.&lt;br/&gt;
    Supports syntax highlighting, rename refactoring, documentation lookup, inspections, quickfixes and much more.
    &lt;/html&gt;</description>
  <change-notes>
        &lt;html&gt;
        &lt;b&gt;Changes in version 1.5.8 compared to 1.5.7:&lt;/b&gt;
        &lt;ul&gt;
            &lt;li&gt;&lt;b&gt;BashSupport development is on hold. I'm unable to continue to ship a high quality plugin with my very limited spare time. Most of the other Top-10 plugins are either made by JetBrains or are commercial offerings. Further development may happen in 2017. Please accept my apologies...&lt;/b&gt;&lt;/li&gt;
            &lt;li&gt;Features removed:&lt;br/&gt;
            &lt;ul&gt;
                &lt;li&gt;#333: Marked support for escapes in evaluated code as experimental.
                    A proper fix needs major work on the lexer framework and is currently not fully supported.
                    There is a new experimental setting in the BashSupport settings dialog. Use it at your own risk.&lt;/li&gt;
            &lt;/ul&gt;
            &lt;/li&gt;

            &lt;li&gt;Bugs fixed:&lt;br/&gt;
                &lt;ul&gt;
                    &lt;li&gt;#310: The parsed now accepts more deeply nested command lists&lt;/li&gt;
                    &lt;li&gt;#310: The parsed now accepts more deeply nested command lists&lt;/li&gt;
                    &lt;li&gt;#329: "Unexpected Token" Error For Associative Array&lt;/li&gt;
                    &lt;li&gt;#343: Exception "isExpectingEvaluatingHeredoc called on an empty marker stack "&lt;/li&gt;
                    &lt;li&gt;Parsing for arithmetic expression in evaluating heredocs&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
        &lt;/ul&gt;

        &lt;b&gt;Changes in version 1.5.7 compared to 1.5.6:&lt;/b&gt;
        &lt;ul&gt;
            &lt;li&gt;Bugs fixed:&lt;br/&gt;
                &lt;ul&gt;
                    &lt;li&gt;#339: Update failed for AnAction with ID=ExternalJavaDoc (ClassCastException)&lt;/li&gt;
                    &lt;li&gt;#340: isExpectingEvaluatingHeredoc called on an empty marker stack&lt;/li&gt;
                    &lt;li&gt;#341: Exception "The inString stack should not be empty"&lt;/li&gt;
                    &lt;li&gt;#342: Exception "Index out of range: -1" at beginning of file&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
        &lt;/ul&gt;

        &lt;b&gt;Changes in version 1.5.6 compared to 1.5.5:&lt;/b&gt;
        &lt;ul&gt;
            &lt;li&gt;Bugs fixed:&lt;br/&gt;
                &lt;ul&gt;
                    &lt;li&gt;#89: Function expands incorrectly when defined above another function&lt;/li&gt;
                    &lt;li&gt;#125: Array element gives "Unexpected token"&lt;/li&gt;
                    &lt;li&gt;#310: Workaround for deeply nested structures&lt;/li&gt;
                    &lt;li&gt;#320: Array use in arithmetic expressions wasn't working as expected&lt;/li&gt;
                    &lt;li&gt;#321: Handle leading tabs before heredoc end markers in heredocs started with the marker&lt;/li&gt;
                    &lt;li&gt;#324: Error reporting component is broken&lt;/li&gt;
                    &lt;li&gt;#327: Heredoc parser doesn't recognize \$( or \${ construction&lt;/li&gt;
                    &lt;li&gt;#330: Variable declarations in eval code now accepts variables on the left side of an assignment&lt;/li&gt;
                    &lt;li&gt;#331: NPE in HereDoc parsing&lt;/li&gt;
                    &lt;li&gt;#332: NPE in enter processor&lt;/li&gt;
                    &lt;li&gt;#333: ClassCastExceptions in ManpageDocSourc&lt;/li&gt;
                    &lt;li&gt;#334: Potential fix for the lexing state errors&lt;/li&gt;
                    &lt;li&gt;Removed Bash facet, it wasn't used any more. Also, facets are unavailable on the minor platform products.&lt;/li&gt;
                    &lt;li&gt;Switched the exception error reporting to use https.&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
        &lt;/ul&gt;

        &lt;b&gt;Changes in version 1.5.5 compared to 1.5.4:&lt;/b&gt;
        &lt;ul&gt;
            &lt;li&gt;Bugs fixed:&lt;br/&gt;
                &lt;ul&gt;
                    &lt;li&gt;No keyword and live-template autocompletion in command arguments&lt;/li&gt;
                    &lt;li&gt;Performance fixes for less latency in the editor&lt;/li&gt;
                    &lt;li&gt;Variables and functions can now be resolved in scratch files again&lt;/li&gt;
                    &lt;li&gt;#297: File includes with directories or / in the path reference are not working as expected&lt;/li&gt;
                    &lt;li&gt;#298: Global variable, when used locally, mistakenly marks readonly error if set readonly within function&lt;/li&gt;
                    &lt;li&gt;#300: Variables are not recognized in case&lt;/li&gt;
                    &lt;li&gt;#303: Multiline lists not recognised&lt;/li&gt;
                    &lt;li&gt;#306: Index access during dumb mode&lt;/li&gt;
                    &lt;li&gt;#306: Could not initialize class nu.studer.idea.errorreporting.PluginErrorReportSubmitterBundle&lt;/li&gt;
                    &lt;li&gt;#308: Grouping in test commands not properly parsed&lt;/li&gt;
                    &lt;li&gt;#312: Newlines are not accepted in parameter expansions&lt;/li&gt;
                    &lt;li&gt;#313: More gentle parsing for empty command lists for: for, while, until, if, select.&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
        &lt;/ul&gt;

        &lt;b&gt;Changes in version 1.5.4 compared to 1.5.3:&lt;/b&gt;
        &lt;ul&gt;
            &lt;li&gt;Bugs fixed:&lt;br/&gt;
                &lt;ul&gt;
                    &lt;li&gt;#299: ClassNotFound exception in PHPStorm&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
        &lt;/ul&gt;

        &lt;b&gt;Changes in version 1.5.3 compared to 1.5.2:&lt;/b&gt;
        &lt;ul&gt;
            &lt;li&gt;Features:
                &lt;ul&gt;
                    &lt;li&gt;Up to 35x faster file highlighting&lt;/li&gt;
                    &lt;li&gt;Improved eval and trap parsing&lt;/li&gt;
                    &lt;li&gt;Composed commands (if,while,do,case,...) may be the body of a function, i.e. without curly brackets&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
            &lt;li&gt;Bugs fixed:&lt;br/&gt;
                &lt;ul&gt;
                    &lt;li&gt;#286: Eval parsing of code not inside a string&lt;/li&gt;
                    &lt;li&gt;#263: Warning for modifications of variables re-defined as readonly&lt;/li&gt;
                &lt;/ul&gt;
            &lt;/li&gt;
        &lt;/ul&gt;

        &lt;b&gt;New features in version 1.5.x compared to 1.4.x:&lt;/b&gt;
        &lt;ul&gt;
            &lt;li&gt;#90: Language injection into unevaluated heredoc content, single and double quoted strings&lt;/li&gt;
            &lt;li&gt;#274: Spellchecker support for double-quoted strings, single-quoted strings and heredoc
                content
            &lt;/li&gt;
            &lt;li&gt;Bash code passed to eval in single quotes ('') is now parsed, too&lt;/li&gt;
            &lt;li&gt;Files usages in strings are now processed during a file rename if the option is enabled.&lt;/li&gt;
            &lt;li&gt;Renaming files in non-source directories&lt;/li&gt;
            &lt;li&gt;References to other Bash script files will now be renamed if the filename is changed&lt;/li&gt;
            &lt;li&gt;Bash version 4 support is now enabled by default&lt;/li&gt;
        &lt;/ul&gt;

        &lt;br/&gt;
        &lt;a href="https://github.com/jansorg/BashSupport/blob/idea-139.x/Changelog.md"&gt;Full changelog&lt;/a&gt;
        &lt;/html&gt;
        
    </change-notes>
  <application-components>
    <component>
      <implementation-class>com.ansorgit.plugins.bash.editor.codecompletion.BashPathCommandCompletion</implementation-class>
    </component>
  </application-components>
  <project-components>
    <component>
      <implementation-class>com.ansorgit.plugins.bash.settings.BashProjectSettingsComponent</implementation-class>
    </component>
  </project-components>
  <module-components/>
  <actions>
    <action id="Bash.NewBashScript" class="com.ansorgit.plugins.bash.actions.NewBashFileAction" text="Bash Script" description="Create new Bash script file">
      <add-to-group group-id="NewGroup" relative-to-action="NewFile" anchor="after"/>
    </action>
    <group id="Bash.REPL.Group" class="com.intellij.openapi.actionSystem.DefaultActionGroup" text="Bash REPL" description="Bash" popup="false">
      <action id="Bash.AddReplAction" class="com.ansorgit.plugins.bash.actions.AddReplAction" text="Add new Bash console" description="Open a new Bash console window"/>
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </group>
  </actions>
  <extensions defaultExtensionNs="com.intellij">
    <fileTypeFactory implementation="com.ansorgit.plugins.bash.file.BashFileTypeLoader"/>
    <fileTypeDetector implementation="com.ansorgit.plugins.bash.file.BashFileTypeDetector"/>
    <syntaxHighlighter key="Bash" implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashSyntaxHighlighter"/>
    <colorSettingsPage implementation="com.ansorgit.plugins.bash.editor.highlighting.BashColorsAndFontsPage"/>
    <additionalTextAttributes scheme="Default" file="colors/BashDefault.xml"/>
    <additionalTextAttributes scheme="Darcula" file="colors/BashDarcula.xml"/>
    <lang.braceMatcher language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashBraceMatcher"/>
    <lang.commenter language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.highlighting.BashCommenter"/>
    <lang.parserDefinition language="Bash" implementationClass="com.ansorgit.plugins.bash.lang.parser.BashParserDefinition"/>
    <lang.foldingBuilder language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.codefolding.BashFoldingBuilder"/>
    <lang.psiStructureViewFactory language="Bash" implementationClass="com.ansorgit.plugins.bash.structureview.BashStructureViewFactory"/>
    <lang.refactoringSupport language="Bash" implementationClass="com.ansorgit.plugins.bash.refactoring.BashRefactoringSupport"/>
    <lang.documentationProvider language="Bash" implementationClass="com.ansorgit.plugins.bash.documentation.BashDocumentationProvider"/>
    <lang.findUsagesProvider language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.usages.BashFindUsagesProvider"/>
    <lang.formatter language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.formatting.BashFormattingModelBuilder"/>
    <lang.tokenSeparatorGenerator language="Bash" implementationClass="com.ansorgit.plugins.bash.refactoring.BashTokenSeparatorGenerator"/>
    <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.BashFileReference" implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashFileReferenceManipulator"/>
    <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.command.BashCommand" implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashCommandManipulator"/>
    <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.word.BashWord" implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashWordManipulator"/>
    <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.BashString" implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashStringManipulator"/>
    <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.heredoc.BashHereDoc" implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashHereDocManipulator"/>
    <lang.elementManipulator forClass="com.ansorgit.plugins.bash.lang.psi.api.BashKeyword" implementationClass="com.ansorgit.plugins.bash.lang.psi.impl.refactoring.BashKeywordManipulator"/>
    <renamePsiElementProcessor implementation="com.ansorgit.plugins.bash.lang.psi.impl.BashFileRenameProcessor"/>
    <readWriteAccessDetector implementation="com.ansorgit.plugins.bash.editor.accessDetector.BashReadWriteAccessDetector"/>
    <completion.contributor language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.codecompletion.BashCompletionContributor"/>
    <idIndexer filetype="Bash" implementationClass="com.ansorgit.plugins.bash.lang.psi.BashIdIndexer"/>
    <todoIndexer filetype="Bash" implementationClass="com.ansorgit.plugins.bash.lang.psi.BashTodoIndexer"/>
    <defaultLiveTemplatesProvider implementation="com.ansorgit.plugins.bash.editor.liveTemplates.BashLiveTemplatesProvider"/>
    <liveTemplateContext implementation="com.ansorgit.plugins.bash.editor.liveTemplates.BashLiveTemplatesContext"/>
    <internalFileTemplate name="Bash Script"/>
    <annotator language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.annotator.BashAnnotator"/>
    <codeInsight.lineMarkerProvider language="Bash" implementationClass="com.ansorgit.plugins.bash.editor.BashLineMarkerProvider"/>
    <runConfigurationProducer implementation="com.ansorgit.plugins.bash.runner.BashRunConfigProducer"/>
    <configurationType implementation="com.ansorgit.plugins.bash.runner.BashConfigurationType"/>
    <programRunner implementation="com.ansorgit.plugins.bash.runner.BashRunner"/>
    <moveFileHandler implementation="com.ansorgit.plugins.bash.refactoring.BashFileMoveHandler" id="BashMove"/>
    <spellchecker.support implementationClass="com.ansorgit.plugins.bash.editor.BashSpellCheckingSupport" language="Bash"/>
    <enterHandlerDelegate implementation="com.ansorgit.plugins.bash.editor.BashUnmatchedBraceEnterProcessor" order="FIRST" id="BashUnmatchedBrace"/>
    <projectConfigurable groupId="language" instance="com.ansorgit.plugins.bash.settings.BashProjectSettingsConfigurable" id="BashSupport" key="settings.project.groupTitle" bundle="com.ansorgit.plugins.bash.bash"/>
    <errorHandler implementation="nu.studer.idea.errorreporting.PluginErrorReportSubmitter"/>
    <stubElementTypeHolder class="com.ansorgit.plugins.bash.lang.parser.BashElementTypes"/>
    <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashFunctionNameIndex"/>
    <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashScriptNameIndex"/>
    <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashIncludedFilenamesIndex"/>
    <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashIncludeCommandIndex"/>
    <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashCommandNameIndex"/>
    <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashVarDefIndex"/>
    <stubIndex implementation="com.ansorgit.plugins.bash.lang.psi.stubs.index.BashVarIndex"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashFixShebang" key="inspection.fixShebang.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FixShebangInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" runForWholeFile="true" shortName="BashAddShebang" key="inspection.addShebang.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.AddShebangInspection"/>
    <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName" shortName="BashSimpleVarUsage" key="inspection.simpleVarUsage.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.SimpleVarUsageInspection"/>
    <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName" shortName="BashGlobalLocalVarDef" key="inspection.globalLocalVar.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.GlobalLocalVarDefInspection"/>
    <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName" shortName="BashWrapFunction" key="inspection.wrapFunction.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FunctionDefInspection"/>
    <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName" shortName="BashWrapWord" key="inspection.wrapWord.name" enabledByDefault="false" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.WrapWordInStringInspection"/>
    <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName" shortName="BashReplaceWithBackquote" key="inspection.replaceWithBackquote.name" enabledByDefault="false" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ConvertSubshellInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashDuplicateFunction" key="inspection.duplicateFunction.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.DuplicateFunctionDefInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashMissingInclude" key="inspection.missingInclude.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.MissingIncludeFileInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashRecursiveInclusion" key="inspection.recursiveInclusion.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.RecursiveIncludeFileInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashEvaluateExpression" key="inspection.evaluateExpansion.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.EvaluateExpansionInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashUnresolvedVariable" key="inspection.unresolvedVariable.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnresolvedVariableInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashEvaluateArithmeticExpression" key="inspection.evaluateArithmeticExpression.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.EvaluateArithmeticExpressionInspection"/>
    <localInspection language="Bash" level="INFO" groupKey="inspection.groupName" shortName="BashFloatArithmetic" key="inspection.floatArithmetic.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.FloatArithmeticInspection"/>
    <localInspection language="Bash" level="ERROR" groupKey="inspection.groupName" shortName="BashReadOnlyVariable" key="inspection.readOnlyVar.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ReadonlyVariableInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashBuiltInVariable" key="inspection.builtInVar.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.InternalVariableInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashUnknownFileDescriptor" key="inspection.unknownFileDescriptor.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnknownFiledescriptorInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashUnusedFunctionParams" key="inspection.unusedFunctionParams.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnusedFunctionParameterInspection"/>
    <localInspection language="Bash" level="INFO" groupKey="inspection.groupName" shortName="BashReplaceWithSubshell" key="inspection.convertBackquote.name" enabledByDefault="false" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.ConvertBackquoteInspection"/>
    <localInspection language="Bash" level="WARNING" groupKey="inspection.groupName" shortName="BashUnusedFunction" key="inspection.unusedFunctionDef.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.UnusedFunctionDefInspection"/>
    <localInspection language="Bash" level="INFO" groupKey="inspection.groupName" shortName="BashSimpleArrayUse" key="inspection.simpleArrayUse.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.SimpleArrayUseInspection"/>
    <localInspection language="Bash" level="WEAK WARNING" groupKey="inspection.groupName" shortName="BashInternalCommandFunctionOverride" key="inspection.internalCommandOverride.name" enabledByDefault="true" implementationClass="com.ansorgit.plugins.bash.editor.inspections.inspections.InternalCommandFunctionOverrideInspection"/>
  </extensions>
</idea-plugin>
